#include <vector>
#include <iostream>
#include <algorithm>

using namespace std;

#define MaxSize 50
typedef struct
{
int data[MaxSize];
int length=0;
}SqList;
bool ListInsert(SqList &L, int i, int e)
{
if (i<1 || i>L.length + 1)return 0;
if (L.length >= MaxSize)return 0;
for (int j = L.length; j >= i; --j)
L.data[j] = L.data[j - 1];
L.data[i - 1] = e;
L.length++;
return 1;
}
int getchang(SqList &L)
{
	if (L.length == 0)return 0;
	int temp=0,va;
	for (int i = 1; i < L.length; ++i)
		if (L.data[temp] > L.data[i])temp = i;
	//va = L.data[temp];
	L.data[temp] = L.data[L.length - 1];
	//L.data[L.length - 1] = va;
	L.length--;
	return temp+1;
}
int main()
{
	SqList l;
	int a[] = { 1,9,8,96,5,10,2 };
	for (int i = 0; i < 7; ++i) ListInsert(l, i + 1, a[i]);
	printf("%d\n", l.length);
	while (true)
	{
		int te = getchang(l);
		if (te==0) { printf("error!\n"); break; }
		else printf("%d\n", te);
	}



}

